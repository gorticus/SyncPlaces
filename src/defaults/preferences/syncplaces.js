pref("extensions.syncplaces@andyhalford.com.description", "chrome://syncplaces/locale/syncplaces.properties");
pref("extensions.syncplaces.protocol", "http");
pref("extensions.syncplaces.host", "");
pref("extensions.syncplaces.path", "/syncplaces.json");
pref("extensions.syncplaces.htmlpath", "/syncplaces.html");
pref("extensions.syncplaces.xbelpath", "/syncplaces.xml");
pref("extensions.syncplaces.passwordpath", "/passwords");
pref("extensions.syncplaces.userid", "");
pref("extensions.syncplaces.run_wizard", false);
pref("extensions.syncplaces.sendall", true);
pref("extensions.syncplaces.sendhtml", false);
pref("extensions.syncplaces.sendxbel", false);
pref("extensions.syncplaces.send_safe", false);
pref("extensions.syncplaces.cache", true);
pref("extensions.syncplaces.cache_pwd", true);
pref("extensions.syncplaces.profiles", "");
pref("extensions.syncplaces.current_profile", "");
pref("extensions.syncplaces.current_profile_name", "");
pref("extensions.syncplaces.profile_names", "");
pref("extensions.syncplaces.bookmarks_menu", true);
pref("extensions.syncplaces.tools_menu", false);
pref("extensions.syncplaces.started", false);
pref("extensions.syncplaces.autoStarted", false);
pref("extensions.syncplaces.finished", true);
pref("extensions.syncplaces.auto_close", false);
pref("extensions.syncplaces.auto_send", false);
pref("extensions.syncplaces.auto_receive", false);
pref("extensions.syncplaces.auto_send_notify", false);
pref("extensions.syncplaces.auto_receive_notify", false);
pref("extensions.syncplaces.autosync", false);
pref("extensions.syncplaces.delay", "30");
pref("extensions.syncplaces.merge", true);
pref("extensions.syncplaces.merge_pwd", true);
pref("extensions.syncplaces.comparison", "timestamps");
pref("extensions.syncplaces.merge_deletes", true);
pref("extensions.syncplaces.merge_all", true);
pref("extensions.syncplaces.merge_unsorted", true);
pref("extensions.syncplaces.merge_toolbar", true);
pref("extensions.syncplaces.merge_menu", true);
pref("extensions.syncplaces.merge_bookmarks", true);
pref("extensions.syncplaces.merge_seperators", true);
pref("extensions.syncplaces.merge_queries", true);
pref("extensions.syncplaces.merge_livemarks", true);
pref("extensions.syncplaces.selected_folder", "");
pref("extensions.syncplaces.startAutoReceive", false);
pref("extensions.syncplaces.startAutoSend", false);
pref("extensions.syncplaces.startManualReceive", false);
pref("extensions.syncplaces.startManualSend", false);
pref("extensions.syncplaces.autostart_detection", "autostart_normal");
pref("extensions.syncplaces.shutdown_detection", "shutdown_normal");
pref("extensions.syncplaces.skip_name_check", false);
pref("extensions.syncplaces.receive_mechanism", "normal_receive");
pref("extensions.syncplaces.send_mechanism", "normal_send");
pref("extensions.syncplaces.gzip", false);
pref("extensions.syncplaces.small_xbel", false);
pref("extensions.syncplaces.bss_xbel", false);
pref("extensions.syncplaces.sync_type", "sync_json");
pref("extensions.syncplaces.auto_sort", false);
pref("extensions.syncplaces.encrypt", false);
pref("extensions.syncplaces.bits", "b128");
pref("extensions.syncplaces.encryption", "TEA");
pref("extensions.syncplaces.sync_passwords", false);
pref("extensions.syncplaces.sync_icons", true);
pref("extensions.syncplaces.style_tags", "");
pref("extensions.syncplaces.regular_transfer", false);
pref("extensions.syncplaces.transfer_interval", "30");
pref("extensions.syncplaces.transfer_measure", "minutes");
pref("extensions.syncplaces.timed_transfer", false);
pref("extensions.syncplaces.transfer_time", "00:00:00");
pref("extensions.syncplaces.bookmarks", "menu");
pref("extensions.syncplaces.bookmarkFolderID", -1);
pref("extensions.syncplaces.lastReceived", "0");
pref("extensions.syncplaces.lastSend", "0");
pref("extensions.syncplaces.sendHash", "");
pref("extensions.syncplaces.receiveHash", "");
pref("extensions.syncplaces.sendPwdHash", "");
pref("extensions.syncplaces.receivePwdHash", "");
pref("extensions.syncplaces.skip_auth", false);
pref("extensions.syncplaces.debug", false);
pref("extensions.syncplaces.version", "");
pref("extensions.syncplaces.timeout", false);
pref("extensions.syncplaces.firstrun", true);
